/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.fiserv.jarvis.forms;

import com.fiserv.jarvis.controller.DataBaseController;
import com.fiserv.jarvis.models.dbRecord;
import com.fiserv.jarvis.service.ConexionServiceImpl;
import com.fiserv.jarvis.service.IConexionService;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author F1W1JF7
 */
public class frmDataBase extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmDataBase
     */
    public frmDataBase() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupAccion = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRecordset = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        lblBuscarModId = new javax.swing.JLabel();
        txtBuscarModId = new javax.swing.JTextField();
        btnRefresh = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        lblImpleId = new javax.swing.JLabel();
        txtImpleId = new javax.swing.JTextField();
        lblAbmSuffix = new javax.swing.JLabel();
        txtSuffix = new javax.swing.JTextField();
        lblCsmId = new javax.swing.JLabel();
        lblAbmType = new javax.swing.JLabel();
        txtCsmID = new javax.swing.JTextField();
        lblOrigen = new javax.swing.JLabel();
        txtOrigen = new javax.swing.JTextField();
        lblInicio = new javax.swing.JLabel();
        lblFin = new javax.swing.JLabel();
        txtFechaIni = new javax.swing.JTextField();
        txtFechaFin = new javax.swing.JTextField();
        cboxType = new javax.swing.JComboBox<>();
        txtChgID = new javax.swing.JTextField();
        lblChgId = new javax.swing.JLabel();
        lblResponsables = new javax.swing.JLabel();
        txtResponsables = new javax.swing.JTextField();
        lblEstado = new javax.swing.JLabel();
        cboxEstado = new javax.swing.JComboBox<>();
        txtFechaProd = new javax.swing.JTextField();
        lblProd = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtSrcModif = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtObjImple = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtSubvols = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        rbtnAddNew = new javax.swing.JRadioButton();
        rbtnNewFix = new javax.swing.JRadioButton();
        rbtnUpdate = new javax.swing.JRadioButton();
        rbtnDelete = new javax.swing.JRadioButton();
        btnReset = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("B24 Data Base");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblRecordset.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Imple ID", "Csm ID", "Suffix", "Type", "Chg ID", "Responsables", "Estado", "Origen", "Fecha Ini", "Fecha Fin", "Fehca Prod", "Descripcion", "Src Modif", "Obj Imple", "SubVols"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRecordset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRecordsetMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblRecordset);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 1270, 470));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Registros de la Base de Datos");
        jLabel4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 0)));
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, 830, 30));

        lblBuscarModId.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblBuscarModId.setForeground(new java.awt.Color(255, 255, 0));
        lblBuscarModId.setText("Custom ID Filter:");
        jPanel2.add(lblBuscarModId, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 100, 30));

        txtBuscarModId.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        txtBuscarModId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarModIdKeyReleased(evt);
            }
        });
        jPanel2.add(txtBuscarModId, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 110, -1));

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        jPanel2.add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 90, 30));

        jTabbedPane1.addTab("Registros", jPanel2);
        jPanel2.getAccessibleContext().setAccessibleParent(jTabbedPane1);

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Alta / Baja / Modificaci√≥n de Registros");
        jLabel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 204), 3, true));
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 440, 30));

        lblImpleId.setForeground(new java.awt.Color(255, 255, 255));
        lblImpleId.setText("Imple ID:");
        jPanel1.add(lblImpleId, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 50, 20));

        txtImpleId.setEditable(false);
        txtImpleId.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.add(txtImpleId, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 120, -1));

        lblAbmSuffix.setForeground(new java.awt.Color(255, 255, 255));
        lblAbmSuffix.setText("Suffix:");
        jPanel1.add(lblAbmSuffix, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 60, 50, 20));

        txtSuffix.setEditable(false);
        txtSuffix.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.add(txtSuffix, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 80, 80, -1));

        lblCsmId.setForeground(new java.awt.Color(255, 255, 255));
        lblCsmId.setText("Csm ID:");
        jPanel1.add(lblCsmId, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 49, 20));

        lblAbmType.setForeground(new java.awt.Color(255, 255, 255));
        lblAbmType.setText("Type:");
        jPanel1.add(lblAbmType, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 30, 20));

        txtCsmID.setEditable(false);
        txtCsmID.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.add(txtCsmID, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 80, 130, -1));

        lblOrigen.setForeground(new java.awt.Color(255, 255, 255));
        lblOrigen.setText("Origen:");
        jPanel1.add(lblOrigen, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, 40, 20));
        jPanel1.add(txtOrigen, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 250, 390, -1));

        lblInicio.setForeground(new java.awt.Color(255, 255, 255));
        lblInicio.setText("Fecha Inicio:");
        jPanel1.add(lblInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, 70, 20));

        lblFin.setForeground(new java.awt.Color(255, 255, 255));
        lblFin.setText("Fecha Fin:");
        jPanel1.add(lblFin, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, 60, 20));

        txtFechaIni.setToolTipText("Formatted \"yyyy/mm/dd\"");
        jPanel1.add(txtFechaIni, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 300, 100, -1));

        txtFechaFin.setToolTipText("Formatted \"yyyy/mm/dd\"");
        jPanel1.add(txtFechaFin, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 300, 110, -1));

        cboxType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<none>", "POYECTO", "CUSTOM", "MANDATE" }));
        jPanel1.add(cboxType, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 180, -1));
        jPanel1.add(txtChgID, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 140, 170, -1));

        lblChgId.setForeground(new java.awt.Color(255, 255, 255));
        lblChgId.setText("Chg ID:");
        jPanel1.add(lblChgId, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 120, 49, 20));

        lblResponsables.setForeground(new java.awt.Color(255, 255, 255));
        lblResponsables.setText("Responsables:");
        jPanel1.add(lblResponsables, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, 80, 20));
        jPanel1.add(txtResponsables, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 180, -1));

        lblEstado.setForeground(new java.awt.Color(255, 255, 255));
        lblEstado.setText("Estado:");
        jPanel1.add(lblEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 170, 40, 20));

        cboxEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<none>", "Desarrollo", "Testing", "Homologaciones", "Produccion", "RollBack" }));
        jPanel1.add(cboxEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 190, 170, -1));

        txtFechaProd.setToolTipText("Formatted \"yyyy/mm/dd\"");
        jPanel1.add(txtFechaProd, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 300, 100, 20));

        lblProd.setForeground(new java.awt.Color(255, 255, 255));
        lblProd.setText("Fecha Prod:");
        jPanel1.add(lblProd, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 280, 70, 20));

        txtDescripcion.setColumns(20);
        txtDescripcion.setLineWrap(true);
        txtDescripcion.setRows(5);
        txtDescripcion.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 255, 153), 3, true), "Descripci√≥n:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 153, 51))); // NOI18N
        jScrollPane2.setViewportView(txtDescripcion);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 70, 380, 200));

        txtSrcModif.setColumns(20);
        txtSrcModif.setLineWrap(true);
        txtSrcModif.setRows(5);
        txtSrcModif.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 204, 51), 3, true), "Src Modificados:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 102, 0))); // NOI18N
        jScrollPane3.setViewportView(txtSrcModif);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 70, 360, 200));

        txtObjImple.setColumns(20);
        txtObjImple.setLineWrap(true);
        txtObjImple.setRows(5);
        txtObjImple.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 255), 3, true), "Obj. Imlementados:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(102, 102, 255))); // NOI18N
        jScrollPane4.setViewportView(txtObjImple);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 280, 380, 210));

        txtSubvols.setBackground(new java.awt.Color(204, 204, 204));
        txtSubvols.setColumns(20);
        txtSubvols.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtSubvols.setLineWrap(true);
        txtSubvols.setRows(5);
        txtSubvols.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 153), 3, true), "SubVols:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 0, 0))); // NOI18N
        jScrollPane5.setViewportView(txtSubvols);

        jPanel1.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 280, 360, 210));

        jLabel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 50, 800, 460));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 153));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("No superar 960 Bytes en cada campo y No usar caracteres de:  ' ; ' ni tampoco ' @ '");
        jLabel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 204, 102), 3, true));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 10, 800, 30));

        rbtnAddNew.setBackground(new java.awt.Color(0, 51, 51));
        btnGroupAccion.add(rbtnAddNew);
        rbtnAddNew.setForeground(new java.awt.Color(255, 255, 255));
        rbtnAddNew.setText("Add New");
        rbtnAddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnAddNewActionPerformed(evt);
            }
        });
        jPanel1.add(rbtnAddNew, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 390, -1, -1));

        rbtnNewFix.setBackground(new java.awt.Color(0, 51, 51));
        btnGroupAccion.add(rbtnNewFix);
        rbtnNewFix.setForeground(new java.awt.Color(255, 255, 255));
        rbtnNewFix.setText("New Fix");
        rbtnNewFix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnNewFixActionPerformed(evt);
            }
        });
        jPanel1.add(rbtnNewFix, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 390, -1, -1));

        rbtnUpdate.setBackground(new java.awt.Color(0, 51, 51));
        btnGroupAccion.add(rbtnUpdate);
        rbtnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        rbtnUpdate.setText("Update");
        rbtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(rbtnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 390, -1, -1));

        rbtnDelete.setBackground(new java.awt.Color(0, 51, 51));
        btnGroupAccion.add(rbtnDelete);
        rbtnDelete.setForeground(new java.awt.Color(255, 255, 255));
        rbtnDelete.setText("Delete");
        rbtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(rbtnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 390, -1, -1));

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        jPanel1.add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 460, 70, 30));

        btnSubmit.setText("Submit >>>");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        jPanel1.add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 460, 240, 30));

        jLabel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true), "Select Action:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 370, 390, 60));

        jLabel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 440, 460));

        jTabbedPane1.addTab("ABM", jPanel1);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1290, 570));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblRecordsetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRecordsetMouseClicked
        DefaultTableModel modelo = (DefaultTableModel) tblRecordset.getModel();
        //Valido si se hizo Doble Click en la Fila de la tabla
        if(evt.getClickCount() == 2){
            int filaSelected = tblRecordset.convertRowIndexToModel( tblRecordset.getSelectedRow());
            JOptionPane.showMessageDialog(null, "Fila Nro.: [ " + tblRecordset.getSelectedRow() + " ] seleccionada.");

            txtImpleId.setText((String)modelo.getValueAt(filaSelected, 0));
            txtCsmID.setText((String)modelo.getValueAt(filaSelected, 1));
            txtSuffix.setText((String)modelo.getValueAt(filaSelected, 2));
            
            switch ((String)modelo.getValueAt(filaSelected, 3)) {
                case "<none>":
                    cboxType.setSelectedIndex(0);
                    break;
                case "PROYECTO":
                    cboxType.setSelectedIndex(1);
                    break;
                case "CUSTOM  ":
                    cboxType.setSelectedIndex(2);
                    break;
                case "MANDATE ":
                    cboxType.setSelectedIndex(3);
                    break;
                default:
                    cboxType.setSelectedIndex(0);
            }

            txtChgID.setText((String)modelo.getValueAt(filaSelected, 4));
            txtResponsables.setText((String)modelo.getValueAt(filaSelected, 5));
            
            switch ((String)modelo.getValueAt(filaSelected, 6)) {
                case "<none>":
                    cboxEstado.setSelectedIndex(0);
                    break;
                case "Desarrollo":
                    cboxEstado.setSelectedIndex(1);
                    break;
                case "Testing":
                    cboxEstado.setSelectedIndex(2);
                    break;
                case "Homologaciones":
                    cboxEstado.setSelectedIndex(3);
                    break;
                case "Produccion":
                    cboxEstado.setSelectedIndex(3);
                    break;
                case "RollBack":
                    cboxEstado.setSelectedIndex(4);
                    break;
                default:
                    cboxEstado.setSelectedIndex(0);
            }
            
            txtOrigen.setText((String)modelo.getValueAt(filaSelected, 7));
            txtFechaIni.setText((String)modelo.getValueAt(filaSelected, 8));
            txtFechaFin.setText((String)modelo.getValueAt(filaSelected, 9));
            txtFechaProd.setText((String)modelo.getValueAt(filaSelected, 10));
            txtDescripcion.setText((String)modelo.getValueAt(filaSelected, 11));
            
            txtSrcModif.setText((String)modelo.getValueAt(filaSelected, 12));   
            txtObjImple.setText((String)modelo.getValueAt(filaSelected, 13));   
            txtSubvols.setText((String)modelo.getValueAt(filaSelected, 14)); 
            
            jTabbedPane1.setSelectedIndex(1) ;
            jTabbedPane1.setVisible(true);
            
        }
        
        
    }//GEN-LAST:event_tblRecordsetMouseClicked

    private void txtBuscarModIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarModIdKeyReleased
        DefaultTableModel modelo = new DefaultTableModel();
        modelo = (DefaultTableModel) tblRecordset.getModel();
        
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(modelo);
        tblRecordset.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(txtBuscarModId.getText(), 1));
    }//GEN-LAST:event_txtBuscarModIdKeyReleased

    
    
    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        List<String> registros = null;
        DataBaseController dbController =null;
        DefaultTableModel modelo =new DefaultTableModel();
        dbController =new DataBaseController(connService);
        
        try {
            modelo = (DefaultTableModel) tblRecordset.getModel();
            registros = dbController.getAllRecords();
            
            if (registros.isEmpty()){
                JOptionPane.showMessageDialog(null, "No hay Registros de la BDDD. \n Verificar si el Server esta UP.");
            }else{
                for (String registro : registros) {
                    String[] datos = registro.split("@");

                    for(String dato : datos){
                        String[] fila = dato.split(";");
                        modelo.addRow(fila);
                    }
                }
            }
        } catch (UnknownHostException ex) {
            Logger.getLogger(frmDataBase.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formInternalFrameOpened

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        List<String> registros = null;
        DataBaseController dbController =null;
        DefaultTableModel modelo =new DefaultTableModel();
        dbController =new DataBaseController(connService);
        
        try {
            //Obtengo el modelo de datos de la tabla.
            modelo = (DefaultTableModel) tblRecordset.getModel();

            //primero vacio las filas y despues actualizo
            for(int i=modelo.getRowCount()-1 ;i>=0 ; i--){
                modelo.removeRow(i);
            }

            registros = dbController.getAllRecords();
            
            for (String registro : registros) {
                String[] datos = registro.split("@");
                
                for(String dato : datos){
                    String[] fila = dato.split(";");
                    modelo.addRow(fila);
                }
            }
        } catch (UnknownHostException ex) {
            Logger.getLogger(frmDataBase.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void rbtnAddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnAddNewActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) tblRecordset.getModel();
        int idImpleAux = 0;
        int idCsmAux = 0;
        int idImple = 0;
        int idCsm = 0;
        int  countRows;
        
        countRows = modelo.getRowCount();
        
        if (countRows == 0){
            JOptionPane.showMessageDialog(null, 
                                        "No hay registros cargados en la Tabla.\n" +
                                        "Verifique la conexion con la BBDD para obtener \n" +
                                        "el nuevo ID de registro.");
        }else{        
            for(int i=0; i < countRows; i++){

                idImpleAux = Integer.parseInt(modelo.getValueAt(i, 0).toString()); 
                idCsmAux = Integer.parseInt(modelo.getValueAt(i, 1).toString());

                if ( idImpleAux > idImple){   //id imple
                    idImple =  idImpleAux;
                }

                if ( idCsmAux > idCsm){   //id imple
                    idCsm =  idCsmAux;
                }

            }

            //Incremento en 1 sobre los valores maximos.
            idImple++;
            idCsm++;

            JOptionPane.showMessageDialog(null, 
                                            "Se generar√° un Nuevo Registro. \n" + 
                                            "valor de Id Imple: [" + idImple + "] \n" +
                                            "valor de Id Csm: [" + idCsm + "]" );

            
            String idImpleFormatted = String.format("%0" + 6 + "d", idImple); 
            String idCsmFormatted = String.format("%0" + 6 + "d", idCsm);
            
            txtImpleId.setText( idImpleFormatted);
            txtCsmID.setText(idCsmFormatted);
            txtSuffix.setText("A");
        }
    }//GEN-LAST:event_rbtnAddNewActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        JOptionPane.showMessageDialog(null, "Se Inicializa la entrada de Datos.");
        
        txtBuscarModId.setText("");
        txtImpleId.setText("");
        txtCsmID.setText("");
        txtSuffix.setText("");
        cboxType.setSelectedIndex(0);
        txtChgID.setText("");
        txtResponsables.setText("");
        cboxEstado.setSelectedIndex(0);
        txtOrigen.setText("");
        txtFechaFin.setText("");
        txtFechaIni.setText("");
        txtFechaProd.setText("");
        txtDescripcion.setText("");
        txtObjImple.setText("");
        txtSrcModif.setText("");
        txtSubvols.setText("");
        
        rbtnAddNew.setSelected(false);
        rbtnNewFix.setSelected(false);
        rbtnUpdate.setSelected(false);
        rbtnDelete.setSelected(false);
                
    }//GEN-LAST:event_btnResetActionPerformed

    private void rbtnNewFixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnNewFixActionPerformed
        char caracter ;
        int  iCharAscii;
        String nuevoChar ;
        int  iNuevoChar;
        
        
        if (txtSuffix.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Debe seleccionar un Proyecto.");
        }else{
            caracter =  txtSuffix.getText().charAt(0);
            iCharAscii = (int)(caracter);
            
            if (iCharAscii > 64 && iCharAscii < 91){
                if(iCharAscii == 90 ){
                    JOptionPane.showMessageDialog(null, 
                            "Se han utilizado todas la combinaciones de Sufijos. Por favor generar un nuevo CustomID.");
                    txtImpleId.setText("");
                    txtCsmID.setText("");
                    txtSuffix.setText("");
                    cboxType.setSelectedIndex(0);
                    txtChgID.setText("");
                    txtResponsables.setText("");
                    cboxEstado.setSelectedIndex(0);
                    txtOrigen.setText("");
                    txtFechaFin.setText("");
                    txtFechaIni.setText("");
                    txtFechaProd.setText("");
                    txtDescripcion.setText("");
                    txtObjImple.setText("");
                    txtSrcModif.setText("");
                    txtSubvols.setText("");
                }else{
                    iNuevoChar = iCharAscii + 1;
                    nuevoChar = Character.toString(iNuevoChar) ;

                    JOptionPane.showMessageDialog(null, 
                            "Se generar√° un nuevo Fix con la letra: [ " + nuevoChar + " ].");
                    
                    txtSuffix.setText(nuevoChar);
                    cboxType.setSelectedIndex(0);
                    txtChgID.setText("");
                    txtResponsables.setText("");
                    cboxEstado.setSelectedIndex(0);
                    txtOrigen.setText("");
                    txtFechaFin.setText("");
                    txtFechaIni.setText("");
                    txtFechaProd.setText("");
                    txtDescripcion.setText("");
                    txtObjImple.setText("");
                    txtSrcModif.setText("");
                    txtSubvols.setText("");
                }
            }
        }

    }//GEN-LAST:event_rbtnNewFixActionPerformed

    private void rbtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnUpdateActionPerformed
        
        
        JOptionPane.showMessageDialog(null, "Se actualizar√° el registro.\n"+
                                                        "Para finalizar presione la tecla 'Submmit >>>'" );
        
        
    }//GEN-LAST:event_rbtnUpdateActionPerformed

    private void rbtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnDeleteActionPerformed
       
        JOptionPane.showMessageDialog(null, "Se Eliminar√° el registro.\n"+
                                                        "Para finalizar presione la tecla 'Submmit >>>'" );
       
    }//GEN-LAST:event_rbtnDeleteActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        List<String> registros =new ArrayList<>();
        DefaultTableModel modelo =new DefaultTableModel();
        
        dbRecord registro =new dbRecord();
        DataBaseController dbController =null;
        dbController =new DataBaseController(connService);
        char caracter;
        boolean isDescripcionMayor;
        boolean isObjImpleMayor;
        boolean isSrcModifMayor;
        boolean isSubvolsMayor;
        
        isDescripcionMayor = false;
        isObjImpleMayor = false;
        isSrcModifMayor = false;
        isSubvolsMayor = false;
        
        if(txtDescripcion.getText().length() > 960){
            JOptionPane.showMessageDialog(null, "Se ha superado el Maximo de Bytes en el campo 'DESCRIPCION'");
            isDescripcionMayor = true;
        }

        if(txtObjImple.getText().length() > 960){
            JOptionPane.showMessageDialog(null, "Se ha superado el Maximo de Bytes en el campo 'OBJ IMPLE'");
            isObjImpleMayor = true;
        }
                
        if(txtSrcModif.getText().length() > 960){
            JOptionPane.showMessageDialog(null, "Se ha superado el Maximo de Bytes en el campo 'SRC MODIF'");
            isSrcModifMayor = true;
        }
                        
        if(txtSubvols.getText().length() > 960){
            JOptionPane.showMessageDialog(null, "Se ha superado el Maximo de Bytes en el campo 'SUBVOLS'");
            isSubvolsMayor = true;
        }
        
        
        if ( (!isDescripcionMayor) && (!isObjImpleMayor) && (!isSrcModifMayor) && 
             (!isSubvolsMayor) && !txtImpleId.getText().isEmpty() && !txtCsmID.getText().isEmpty() ) {

            //Armo el registro con el contenido de los campos
            registro.setImpleId(txtImpleId.getText());
            registro.setCsmId(txtCsmID.getText());
            caracter =  txtSuffix.getText().charAt(0);
            registro.setSuffix(caracter );
            registro.setType(cboxType.getItemAt(cboxType.getSelectedIndex()) );
            registro.setChgId(txtChgID.getText() );
            registro.setResponsables(txtResponsables.getText());
            registro.setEstado(cboxEstado.getItemAt(cboxEstado.getSelectedIndex()));
            registro.setOrigen(txtOrigen.getText());
            registro.setFechaIni(txtFechaIni.getText());
            registro.setFechaFin(txtFechaFin.getText());
            registro.setFechaProd(txtFechaProd.getText());
            registro.setDescripcion(txtDescripcion.getText());
            registro.setObjImple(txtObjImple.getText());
            registro.setSrcModif(txtSrcModif.getText());
            registro.setSubvols(txtSubvols.getText());

            //Ruteo al servicio correspondiente del controlador    
            try{
                if(rbtnAddNew.isSelected() || rbtnNewFix.isSelected() ){
                   //JOptionPane.showMessageDialog(null, "rbtnAddNew selected");
                   registros = dbController.createNewRecord(registro);

               }else if(rbtnUpdate.isSelected()){
                   //JOptionPane.showMessageDialog(null, "rbtnUpdate selected");
                   registros = dbController.updtRecord(registro);

               }else if(rbtnDelete.isSelected()){
                   //JOptionPane.showMessageDialog(null, "rbtnDelete selected");
                   registros = dbController.deleteRecord(registro);
               }
            }catch (UnknownHostException ex) {
                    Logger.getLogger(frmDataBase.class.getName()).log(Level.SEVERE, null, ex);
            }

            

            //Muestro la Tabla.
            jTabbedPane1.setSelectedIndex(0) ;
            jTabbedPane1.setVisible(true);
            
            //Obtengo el modelo de datos de la tabla.
            modelo = (DefaultTableModel) tblRecordset.getModel();

            //primero vacio las filas y despues actualizo
            for(int i=modelo.getRowCount()-1 ;i>=0 ; i--){
                modelo.removeRow(i);
            }

            
            //Completo la tabla con los datos actualizados
            for (String records : registros) {
                String[] datos = records.split("@");

                if (datos.equals("[ERROR]")){
                    JOptionPane.showMessageDialog(null, "Se produjo un error en la actualizaci√≥n.");
                    break;
                }
                
                for(String dato : datos){
                    String[] fila = dato.split(";");
                    modelo.addRow(fila);
                }
            }


            
        }else{
            JOptionPane.showMessageDialog(null, 
                    "Verificar la informaci√≥n de los campos. \n" +
                    "Los campos Clave no pueden estar Vacios.\n" + 
                    "Las cajas de informaci√≥n no pueden superar los 960 bytes.\n" + 
                    "Tampoco se debe usar los caracteres de ';' y '@'");
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    
    
//    private DefaultTableModel tblModelo =new DefaultTableModel();
    private final IConexionService connService =new ConexionServiceImpl();
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnGroupAccion;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> cboxEstado;
    private javax.swing.JComboBox<String> cboxType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblAbmSuffix;
    private javax.swing.JLabel lblAbmType;
    private javax.swing.JLabel lblBuscarModId;
    private javax.swing.JLabel lblChgId;
    private javax.swing.JLabel lblCsmId;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblFin;
    private javax.swing.JLabel lblImpleId;
    private javax.swing.JLabel lblInicio;
    private javax.swing.JLabel lblOrigen;
    private javax.swing.JLabel lblProd;
    private javax.swing.JLabel lblResponsables;
    private javax.swing.JRadioButton rbtnAddNew;
    private javax.swing.JRadioButton rbtnDelete;
    private javax.swing.JRadioButton rbtnNewFix;
    private javax.swing.JRadioButton rbtnUpdate;
    private javax.swing.JTable tblRecordset;
    private javax.swing.JTextField txtBuscarModId;
    private javax.swing.JTextField txtChgID;
    private javax.swing.JTextField txtCsmID;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextField txtFechaFin;
    private javax.swing.JTextField txtFechaIni;
    private javax.swing.JTextField txtFechaProd;
    private javax.swing.JTextField txtImpleId;
    private javax.swing.JTextArea txtObjImple;
    private javax.swing.JTextField txtOrigen;
    private javax.swing.JTextField txtResponsables;
    private javax.swing.JTextArea txtSrcModif;
    private javax.swing.JTextArea txtSubvols;
    private javax.swing.JTextField txtSuffix;
    // End of variables declaration//GEN-END:variables
}
