package com.fiserv.jarvis.forms;

import com.fiserv.jarvis.service.ConexionSSH;
import com.fiserv.jarvis.utils.BuildTree;
import com.fiserv.jarvis.utils.Utils;
import com.jcraft.jsch.Session;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import javax.swing.JOptionPane;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;

/**
 * @author F1W1JF7
 */
public class frmLibraryManager extends javax.swing.JInternalFrame{

    /**
     * Creates new form frmLibraryManager
     */
    public frmLibraryManager() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cboVolumen = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cboMode = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cboStruct = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtCommand = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cboSaveOption = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtFilename = new javax.swing.JTextField();
        btnSaveFile = new javax.swing.JButton();
        btnSend = new javax.swing.JButton();
        btnCheck = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        cboSubvol = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtConsole = new javax.swing.JTextArea();
        cboType = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        treeLocalFiles = new javax.swing.JTree();
        btnOpenFolder = new javax.swing.JButton();

        jFileChooser1.setCurrentDirectory(new java.io.File("C:\\Jarvis"));
        jFileChooser1.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        setBackground(new java.awt.Color(204, 204, 204));
        setClosable(true);
        setIconifiable(true);
        setTitle("DDL's and Token's Manager");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Selection Volumen:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 110, 20));

        jPanel1.add(cboVolumen, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 190, -1));

        jLabel2.setText("Select Mode:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 80, 20));

        cboMode.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<none>", "DEFS", "RECS", "SHOW" }));
        jPanel1.add(cboMode, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 120, -1));

        jLabel3.setText("Select Struct:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, 80, 20));

        jPanel1.add(cboStruct, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 140, -1));

        jLabel4.setText("Command:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 100, 20));
        jPanel1.add(txtCommand, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 400, -1));

        jLabel5.setText("Save to File:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 330, 70, 20));

        cboSaveOption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<none>", "NO", "SI" }));
        jPanel1.add(cboSaveOption, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, 90, -1));

        jLabel6.setText("File Name:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 330, 70, 20));
        jPanel1.add(txtFilename, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 350, 120, -1));

        btnSaveFile.setText("Save File");
        btnSaveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveFileActionPerformed(evt);
            }
        });
        jPanel1.add(btnSaveFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 400, 100, 30));

        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });
        jPanel1.add(btnSend, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, 280, 30));

        btnCheck.setForeground(new java.awt.Color(0, 0, 204));
        btnCheck.setText("Check");
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });
        jPanel1.add(btnCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 120, 90, 50));

        jLabel9.setText("Selection SubVol:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 110, 20));

        jPanel1.add(cboSubvol, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 190, -1));

        txtConsole.setColumns(20);
        txtConsole.setRows(5);
        txtConsole.setWrapStyleWord(true);
        txtConsole.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 102, 204), 3, true), "Console:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 102, 204))); // NOI18N
        jScrollPane5.setViewportView(txtConsole);

        jPanel1.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 10, 630, 460));

        cboType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<none>", "DDL", "TKN" }));
        jPanel1.add(cboType, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 350, 90, -1));

        jLabel10.setText("Type:");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 330, 70, 20));

        jLabel8.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 3, true), "Save", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 0, 0))); // NOI18N
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, 380, 160));

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        jPanel1.add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 110, 30));

        jLabel7.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 102, 204), 3, true), "Build Command:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 102, 204))); // NOI18N
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 440, 260));

        treeLocalFiles.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 102, 255), 3, true), "Local Files:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 102, 255))); // NOI18N
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        treeLocalFiles.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane3.setViewportView(treeLocalFiles);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 50, 190, 420));

        btnOpenFolder.setText("Open Directory");
        btnOpenFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenFolderActionPerformed(evt);
            }
        });
        jPanel1.add(btnOpenFolder, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 10, 190, 30));

        jTabbedPane1.addTab("Files", jPanel1);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1320, 510));
        jTabbedPane1.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        
        Properties prop = new Properties();
        try(InputStream fis = new FileInputStream(propertyFile)) {
            prop.load(fis);
            
            //String file = "C:\\Jarvis\\Config\\Properties";
            
            
            String[] listaVolumen = Utils.getProperty(propertyFile, "library.Volumen").split(",");
            String[] listaSubvol  = Utils.getProperty(propertyFile,"library.SubVol").split(",");
            String[] listaStruct  = Utils.getProperty(propertyFile,"library.struct").split(",");
            
            for(int i=0; i<listaVolumen.length; i++){
                cboVolumen.addItem(listaVolumen[i]);
            }
            for(int i=0; i<listaSubvol.length; i++){
                cboSubvol.addItem(listaSubvol[i]);
            }
            for(int i=0; i<listaStruct.length; i++){
                cboStruct.addItem(listaStruct[i]);
            }
            
            
            fis.close();
        }catch(Exception e) {
            System.out.println("Unable to find the specified properties file");
            e.printStackTrace();
        }
        
        
        
    }//GEN-LAST:event_formInternalFrameOpened

    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        
        String command;
        
        //limpio los textos.
        txtConsole.setText("");
        
        if(!cboVolumen.getSelectedItem().equals("<none>")  && 
           !cboSubvol.getSelectedItem().equals("<none>")   && 
           !cboStruct.getSelectedItem().equals("<none>")   && 
           !cboMode.getSelectedItem().equals("<none>")){
            
        
            command = "cd /G/" + cboVolumen.getSelectedItem().toString() + "/" +
                             cboSubvol.getSelectedItem().toString()  +
                      "; gtacl -c \"DDLDOC " + cboMode.getSelectedItem().toString() + 
                      " " + cboStruct.getSelectedItem().toString() +"\""  ; 
            
            txtCommand.setText(command);
             
        }else{
            JOptionPane.showMessageDialog(null, "Verifique la Selección de los combos Desplegables.");
        }
        
        
    }//GEN-LAST:event_btnCheckActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        ConexionSSH conn =new ConexionSSH();
        Session session = null;
        
        List<String> resp =new ArrayList<>();
        String command;

        String host = Utils.getProperty( propertyFile , "config_env.desarrollo.dns");
        String user = Utils.getProperty( propertyFile , "config_env.desarrollo.user");
        String pass = Utils.getProperty( propertyFile , "config_env.desarrollo.pass");
        int port = Integer.parseInt(Utils.getProperty( propertyFile , "config_port.ssh"));

        command   = txtCommand.getText();

        if(!command.equals("")){

            session = conn.ConnectSSH(user, pass, host, port);
            
            if(session != null){

                resp = conn.sendMessageSSH(session, command);
                
                if(resp != null && !resp.isEmpty()){
                    for(int i=0; i < resp.size(); i++){
                        txtConsole.append(resp.get(i)+"\n");
                    }
                }
            }else{
                JOptionPane.showMessageDialog(null, "No se ha podido establecer Session.\n" + 
                                                            "Verifique la conectividad de la VPN ó \n" +
                                                            " la información configurada en el archivo 'Properties'.");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Debe verificar el comando con el boton 'Check'.");
        }
        
    }//GEN-LAST:event_btnSendActionPerformed

    private void btnSaveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveFileActionPerformed
        
        //String propertyFile = "C:/Jarvis/Config/Properties";
        String propertyPath = null ;
        
        if(cboSaveOption.getSelectedItem().toString().equals("SI") &&
            !txtFilename.getText().isEmpty() && 
            !cboType.getSelectedItem().equals("<none>") ){
            
            if(Utils.checkFileOrDirectory(propertyFile)){
                if(cboType.getSelectedItem().equals("DDL")){
                    propertyPath = Utils.getProperty(propertyFile, "directory.root.Libs.ddl");
                }

                if(cboType.getSelectedItem().equals("TKN")){
                    propertyPath = Utils.getProperty(propertyFile, "directory.root.Libs.tkn");
                }
            }else{
                JOptionPane.showMessageDialog(null,"Error en el archivo 'Properties'." );
                return ;
            }
            
            if(propertyPath == null){
                JOptionPane.showMessageDialog(null,"Error al recuperar la Property." );
                return;
            }
            
            //System.out.println("Property Path: " + propertyPath);
            // termino de armar el <Path> + <nombre de archivo>
            String fileName = propertyPath + "/" + txtFilename.getText() + ".txt";
            
            //System.out.println("Full Path: " + fileName);
            
            if(!Utils.checkFileOrDirectory(fileName)){
                if(Utils.createFile(fileName)==1){
                    if(Utils.saveFile(fileName, txtConsole.getText())){
                        JOptionPane.showMessageDialog(null,"El archivo [" + fileName + " ] se guardado exitosamente." );
                    }else{
                        JOptionPane.showMessageDialog(null,"Error al guardar el archivo [" + fileName + " ]." );
                    }
                }else if(Utils.createFile(fileName)==0){
                    JOptionPane.showMessageDialog(null,"El archivo [" + fileName + " ] ya existe." );
                    
                }else{
                    JOptionPane.showMessageDialog(null,"Error al Crear el archivo [" + fileName + " ]." );
                }
            }else{
                JOptionPane.showMessageDialog(null,"El archivo ya existe !!!." );
            }
            
            //Reseteo los campos.
            cboSaveOption.setSelectedIndex(0);
            cboType.setSelectedIndex(0);
            txtFilename.setText("");
        
        }else{
            JOptionPane.showMessageDialog(null, "Para guardar el archivo debe seleccionar \n" +
                                                            "la opcion 'SI' y debe ingresar un Nombre.");
        }
        
    }//GEN-LAST:event_btnSaveFileActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        
        txtCommand.setText("");
        txtConsole.setText("");
        
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnOpenFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenFolderActionPerformed
        int seleccion = 0;

        jFileChooser1.showOpenDialog(null);

        if (seleccion == jFileChooser1.APPROVE_OPTION){
            File fichero = jFileChooser1.getSelectedFile();
            
            //System.out.println("Prueba texto fichero: " + fichero.getAbsolutePath());  
            
            BuildTree tree =new BuildTree(fichero);
            treeLocalFiles.setModel(tree.Build());
            
            treeLocalFiles.addTreeSelectionListener(new TreeSelectionListener() {
            
                public void valueChanged(TreeSelectionEvent event) {

                    try{
                        txtConsole.setText("");

                        //Obtengo el string con los elementos de la rama del arbol
                        String p = treeLocalFiles.getSelectionModel().getLeadSelectionPath().toString();
                        System.out.println("Array: " + p);
                        
                        //Obtengo los primero 4 bytes que indican la carpeta raiz
                        String carpeta = p.substring(1, 5); //obtengo 'ddls' o 'tkns'
                        System.out.println("Carpeta: " + carpeta);    

                        //Obtengo el archivo seleccionado
                        String fileTxt = treeLocalFiles.getLastSelectedPathComponent().toString();


                        String path = "";
                        String filePath = "";

                        if(carpeta.equals("ddls")){
                            path = Utils.getProperty( propertyFile , "directory.root.Libs.ddls");
                            filePath = path + "\\" + 
                                treeLocalFiles.getLastSelectedPathComponent() ; 
                            //System.out.println("archivo selected: " + treeLocalFiles.getLastSelectedPathComponent());
                        }else if(carpeta.equals("tkns")){
                            path = Utils.getProperty( propertyFile , "directory.root.Libs.tkns");
                            filePath = path + "\\\\" + 
                                treeLocalFiles.getLastSelectedPathComponent() ; 
                            //System.out.println("archivo selected: " + treeLocalFiles.getLastSelectedPathComponent());
                        }else if(carpeta.equals("Libs")){
                            String subCarpeta = p.substring(7, 11); 
                            path = Utils.getProperty( propertyFile , "directory.root.Libs");
                            filePath = path + "\\\\"+ subCarpeta + "\\\\"+ treeLocalFiles.getLastSelectedPathComponent();
                            //System.out.println("archivo selected: " + treeLocalFiles.getLastSelectedPathComponent());
                        }else{
                            JOptionPane.showMessageDialog(null,"Debe seleccionar archivos dentro de la carpeta 'Libs'.");
                        }

                        System.out.println("filePath: " + filePath );

                        List<String> lista ;

                        lista = Utils.readFile(filePath);

                        for(int i=0; i< lista.size(); i++){
                            txtConsole.append(lista.get(i) + "\n" );
                        }
                    }catch(NullPointerException e){
                        //JOptionPane.showMessageDialog(null, "Falopa!!");
                    }
                }
            });
            
        }else{
            JOptionPane.showMessageDialog(null,"Debe seleccionar un Directorio." );
        }
        
        
        
    }//GEN-LAST:event_btnOpenFolderActionPerformed

    private static String propertyFile = "C:\\Jarvis\\Config\\Properties";
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheck;
    private javax.swing.JButton btnOpenFolder;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSaveFile;
    private javax.swing.JButton btnSend;
    private javax.swing.JComboBox<String> cboMode;
    private javax.swing.JComboBox<String> cboSaveOption;
    private javax.swing.JComboBox<String> cboStruct;
    private javax.swing.JComboBox<String> cboSubvol;
    private javax.swing.JComboBox<String> cboType;
    private javax.swing.JComboBox<String> cboVolumen;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTree treeLocalFiles;
    private javax.swing.JTextField txtCommand;
    private javax.swing.JTextArea txtConsole;
    private javax.swing.JTextField txtFilename;
    // End of variables declaration//GEN-END:variables


}
